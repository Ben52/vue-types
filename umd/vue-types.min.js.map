{"version":3,"file":"vue-types.min.js","sources":["../node_modules/lodash.isplainobject/index.js","../src/utils.js","../src/index.js"],"sourcesContent":["/**\n * lodash (Custom Build) <https://lodash.com/>\n * Build: `lodash modularize exports=\"npm\" -o ./`\n * Copyright jQuery Foundation and other contributors <https://jquery.org/>\n * Released under MIT license <https://lodash.com/license>\n * Based on Underscore.js 1.8.3 <http://underscorejs.org/LICENSE>\n * Copyright Jeremy Ashkenas, DocumentCloud and Investigative Reporters & Editors\n */\n\n/** `Object#toString` result references. */\nvar objectTag = '[object Object]';\n\n/**\n * Checks if `value` is a host object in IE < 9.\n *\n * @private\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a host object, else `false`.\n */\nfunction isHostObject(value) {\n  // Many host objects are `Object` objects that can coerce to strings\n  // despite having improperly defined `toString` methods.\n  var result = false;\n  if (value != null && typeof value.toString != 'function') {\n    try {\n      result = !!(value + '');\n    } catch (e) {}\n  }\n  return result;\n}\n\n/**\n * Creates a unary function that invokes `func` with its argument transformed.\n *\n * @private\n * @param {Function} func The function to wrap.\n * @param {Function} transform The argument transform.\n * @returns {Function} Returns the new function.\n */\nfunction overArg(func, transform) {\n  return function(arg) {\n    return func(transform(arg));\n  };\n}\n\n/** Used for built-in method references. */\nvar funcProto = Function.prototype,\n    objectProto = Object.prototype;\n\n/** Used to resolve the decompiled source of functions. */\nvar funcToString = funcProto.toString;\n\n/** Used to check objects for own properties. */\nvar hasOwnProperty = objectProto.hasOwnProperty;\n\n/** Used to infer the `Object` constructor. */\nvar objectCtorString = funcToString.call(Object);\n\n/**\n * Used to resolve the\n * [`toStringTag`](http://ecma-international.org/ecma-262/7.0/#sec-object.prototype.tostring)\n * of values.\n */\nvar objectToString = objectProto.toString;\n\n/** Built-in value references. */\nvar getPrototype = overArg(Object.getPrototypeOf, Object);\n\n/**\n * Checks if `value` is object-like. A value is object-like if it's not `null`\n * and has a `typeof` result of \"object\".\n *\n * @static\n * @memberOf _\n * @since 4.0.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is object-like, else `false`.\n * @example\n *\n * _.isObjectLike({});\n * // => true\n *\n * _.isObjectLike([1, 2, 3]);\n * // => true\n *\n * _.isObjectLike(_.noop);\n * // => false\n *\n * _.isObjectLike(null);\n * // => false\n */\nfunction isObjectLike(value) {\n  return !!value && typeof value == 'object';\n}\n\n/**\n * Checks if `value` is a plain object, that is, an object created by the\n * `Object` constructor or one with a `[[Prototype]]` of `null`.\n *\n * @static\n * @memberOf _\n * @since 0.8.0\n * @category Lang\n * @param {*} value The value to check.\n * @returns {boolean} Returns `true` if `value` is a plain object, else `false`.\n * @example\n *\n * function Foo() {\n *   this.a = 1;\n * }\n *\n * _.isPlainObject(new Foo);\n * // => false\n *\n * _.isPlainObject([1, 2, 3]);\n * // => false\n *\n * _.isPlainObject({ 'x': 0, 'y': 0 });\n * // => true\n *\n * _.isPlainObject(Object.create(null));\n * // => true\n */\nfunction isPlainObject(value) {\n  if (!isObjectLike(value) ||\n      objectToString.call(value) != objectTag || isHostObject(value)) {\n    return false;\n  }\n  var proto = getPrototype(value);\n  if (proto === null) {\n    return true;\n  }\n  var Ctor = hasOwnProperty.call(proto, 'constructor') && proto.constructor;\n  return (typeof Ctor == 'function' &&\n    Ctor instanceof Ctor && funcToString.call(Ctor) == objectCtorString);\n}\n\nmodule.exports = isPlainObject;\n","import isPlainObject from 'lodash.isplainobject'\n\nconst ObjProto = Object.prototype\nconst toString = ObjProto.toString\nexport const hasOwn = ObjProto.hasOwnProperty\n\nconst FN_MATCH_REGEXP = /^\\s*function (\\w+)/\n\n// https://github.com/vuejs/vue/blob/dev/src/core/util/props.js#L159\nexport const getType = (fn) => {\n  const type = (fn !== null && fn !== undefined) ? (fn.type ? fn.type : fn) : null\n  const match = type && type.toString().match(FN_MATCH_REGEXP)\n  return match && match[1]\n}\n\nexport const getNativeType = (value) => {\n  if (value === null || value === undefined) return null\n  const match = value.constructor.toString().match(FN_MATCH_REGEXP)\n  return match && match[1]\n}\n\n/**\n * No-op function\n */\nexport const noop = () => {}\n\n/**\n * Checks for a own property in an object\n *\n * @param {object} obj - Object\n * @param {string} prop - Property to check\n */\nexport const has = (obj, prop) => hasOwn.call(obj, prop)\n\n/**\n * Determines whether the passed value is an integer. Uses `Number.isInteger` if available\n *\n * @see https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number/isInteger\n * @param {*} value - The value to be tested for being an integer.\n * @returns {boolean}\n */\nexport const isInteger = Number.isInteger || function (value) {\n  return typeof value === 'number' && isFinite(value) && Math.floor(value) === value\n}\n\n/**\n * Determines whether the passed value is an Array.\n *\n * @param {*} value - The value to be tested for being an array.\n * @returns {boolean}\n */\nexport const isArray = Array.isArray || function(value) {\n  return toString.call(value) === '[object Array]'\n}\n\n/**\n * Checks if a value is a function\n *\n * @param {any} value - Value to check\n * @returns {boolean}\n */\nexport const isFunction = (value) => toString.call(value) === '[object Function]'\n\n\n\nconst _typeToString = (type) => {\n  if (type && isArray(type.type)) {\n    return type.type.map(getType).join('\", \"')\n  }\n  return getType(type)\n}\n\n/**\n * Returns a comma separated string of type names\n *\n * @param {any} types - type or array of types to check\n * @returns {string}\n */\nexport const typesToString = (types) => {\n  if (isArray(types)) {\n    return types.map(_typeToString).join('\", \"')\n  }\n  return _typeToString(types)\n}\n\n/**\n * Adds a `def` method to the object returning a new object with passed in argument as `default` property\n *\n * @param {object} type - Object to enhance\n */\nexport const withDefault = function (type) {\n  Object.defineProperty(type, 'def', {\n    value(def) {\n      if (def === undefined && !this.default) {\n        return this\n      }\n      if (!isFunction(def) && !validateType(this, def)) {\n        warn(`${this._vueTypes_name} - invalid default value: \"${def}\"`, def)\n        return this\n      }\n      this.default = (isArray(def) || isPlainObject(def)) ? function () {\n        return def\n      } : def\n      return this\n    },\n    enumerable: false,\n    writable: false\n  })\n}\n\n/**\n * Adds a `isRequired` getter returning a new object with `required: true` key-value\n *\n * @param {object} type - Object to enhance\n */\nexport const withRequired = function (type) {\n  Object.defineProperty(type, 'isRequired', {\n    get() {\n      this.required = true\n      return this\n    },\n    enumerable: false\n  })\n}\n\n/**\n * Adds a `isNullable` getter returning a new object which accepts `null` as prop value\n *\n * @param {object} type - Object to enhance\n */\nexport const withNullable = function (type) {\n  Object.defineProperty(type, 'isNullable', {\n    get() {\n      //prevent multiple calls\n      if (this._vueTypes_nullable) {\n        return this\n      }\n\n      const { type, validator } = this\n      const typeStr = type ? typesToString(type) : ''\n\n      Object.defineProperty(this, '_vueTypes_nullable', {\n        enumerable: false,\n        writable: false,\n        value: true\n      })\n\n\n      this.type = null //delegate type check to the custom validator\n      this.required = true // must be required, else Vue will skip prop checking\n\n      this.validator = (value) => {\n        if (value === null) { return true }\n        if (type) {\n          const valid = validateTypes(type, value, true)\n\n          if (!valid) {\n            warn(`value type should be one of \"${typeStr}\"`)\n            return false\n          }\n        }\n\n        if (typeof validator === 'function') {\n          return validator.call(this, value)\n        }\n\n        return true\n      }\n\n      return this\n    },\n    enumerable: false\n  })\n}\n\n/**\n * Adds `isRequired` and `def` modifiers to an object\n *\n * @param {string} name - Type internal name\n * @param {object} obj - Object to enhance\n * @returns {object}\n */\nexport const toType = (name, obj) => {\n  Object.defineProperty(obj, '_vueTypes_name', {\n    enumerable: false,\n    writable: false,\n    value: name\n  })\n  withRequired(obj)\n  withDefault(obj)\n  withNullable(obj)\n\n  if (isFunction(obj.validator)) {\n    obj.validator = obj.validator.bind(obj)\n  }\n  return obj\n}\n\n/**\n * Validates a given value against a prop type object\n *\n * @param {Object|*} type - Type to use for validation. Either a type object or a constructor\n * @param {*} value - Value to check\n * @param {boolean} silent - Silence warnings\n * @returns {boolean}\n */\nexport const validateType = (type, value, silent = false) => {\n  let typeToCheck = type\n  let valid = true\n  let expectedType\n  if (!isPlainObject(type)) {\n    typeToCheck = { type }\n  }\n  const namePrefix = typeToCheck._vueTypes_name ? (typeToCheck._vueTypes_name + ' - ') : ''\n\n  if (hasOwn.call(typeToCheck, 'type') && typeToCheck.type !== null) {\n    if (isArray(typeToCheck.type)) {\n      valid = typeToCheck.type.some((type) => validateType(type, value, true))\n      expectedType = typeToCheck.type.map((type) => getType(type)).join(' or ')\n    } else {\n      expectedType = getType(typeToCheck)\n\n      if (expectedType === 'Array') {\n        valid = isArray(value)\n      } else if (expectedType === 'Object') {\n        valid = isPlainObject(value)\n      } else if (expectedType === 'String' || expectedType === 'Number' || expectedType === 'Boolean' || expectedType === 'Function') {\n        valid = getNativeType(value) === expectedType\n      } else {\n        valid = value instanceof typeToCheck.type\n      }\n    }\n  }\n\n  if (!valid) {\n    silent === false && warn(`${namePrefix}value \"${value}\" should be of type \"${expectedType}\"`)\n    return false\n  }\n\n  if (hasOwn.call(typeToCheck, 'validator') && isFunction(typeToCheck.validator)) {\n    valid = typeToCheck.validator(value)\n    if (!valid && silent === false) warn(`${namePrefix}custom validation failed`)\n    return valid\n  }\n  return valid\n}\n\n/**\n * Validated an array of types\n *\n * @see validateType\n * @param {any} types - Type or array of types\n * @param {any} value - Value to check\n * @param {boolean} silent - Silence warnings\n * @returns {boolean}\n */\nexport const validateTypes = (types, value, silent) => {\n  return (isArray(types) ? types : [types]).some((type) => {\n    if (type._vueTypes_name === 'oneOf') {\n      return type.type ? validateType(type.type, value, silent) : true\n    }\n    return validateType(type, value, silent)\n  })\n}\n\nlet warn = noop\n\nif (process.env.NODE_ENV !== 'production') {\n  const hasConsole = typeof console !== 'undefined'\n  warn = (msg) => {\n    if (hasConsole) {\n      console.warn(`[VueTypes warn]: ${msg}`)\n    }\n  }\n}\n\nexport { warn }\n","import isPlainObject from 'lodash.isplainobject'\nimport { noop, toType, getType, isFunction, validateType, validateTypes, isInteger, isArray, warn, typesToString } from './utils'\n\nconst VuePropTypes = {\n\n  get any() {\n    return toType('any', {\n      type: null\n    })\n  },\n\n  get func() {\n    return toType('function', {\n      type: Function\n    }).def(currentDefaults.func)\n  },\n\n  get bool() {\n    return toType('boolean', {\n      type: Boolean\n    }).def(currentDefaults.bool)\n  },\n\n  get string() {\n    return toType('string', {\n      type: String\n    }).def(currentDefaults.string)\n  },\n\n  get number() {\n    return toType('number', {\n      type: Number\n    }).def(currentDefaults.number)\n  },\n\n  get array() {\n    return toType('array', {\n      type: Array\n    }).def(currentDefaults.array)\n  },\n\n  get object() {\n    return toType('object', {\n      type: Object\n    }).def(currentDefaults.object)\n  },\n\n  get integer() {\n    return toType('integer', {\n      type: Number,\n      validator(value) {\n        return isInteger(value)\n      }\n    }).def(currentDefaults.integer)\n  },\n\n  get symbol() {\n    return toType('symbol', {\n      type: null,\n      validator(value) {\n        return typeof value === 'symbol'\n      }\n    })\n  },\n\n  custom(validatorFn, warnMsg = 'custom validation failed') {\n    if (typeof validatorFn !== 'function') {\n      throw new TypeError('[VueTypes error]: You must provide a function as argument')\n    }\n\n    return toType(validatorFn.name || '<<anonymous function>>', {\n      validator(...args) {\n        const valid = validatorFn(...args)\n        if (!valid) warn(`${this._vueTypes_name} - ${warnMsg}`)\n        return valid\n      }\n    })\n  },\n\n  oneOf(arr) {\n    if (!isArray(arr)) {\n      throw new TypeError('[VueTypes error]: You must provide an array as argument')\n    }\n    const msg = `oneOf - value should be one of \"${arr.join('\", \"')}\"`\n    const allowedTypes = arr.reduce((ret, v) => {\n      if (v !== null && v !== undefined) {\n        ret.indexOf(v.constructor) === -1 && ret.push(v.constructor)\n      }\n      return ret\n    }, [])\n\n    return toType('oneOf', {\n      type: allowedTypes.length > 0 ? allowedTypes : null,\n      validator(value) {\n        const valid = arr.indexOf(value) !== -1\n        if (!valid) warn(msg)\n        return valid\n      }\n    })\n  },\n\n  instanceOf(instanceConstructor) {\n    return toType('instanceOf', {\n      type: instanceConstructor\n    })\n  },\n\n  oneOfType(arr) {\n    if (!isArray(arr)) {\n      throw new TypeError('[VueTypes error]: You must provide an array as argument')\n    }\n\n    let hasCustomValidators = false\n\n    const nativeChecks = arr.reduce((ret, type, i) => {\n      if (isPlainObject(type)) {\n        if (type._vueTypes_name === 'oneOf') {\n          return ret.concat(type.type || [])\n        }\n        if (type.type && !isFunction(type.validator)) {\n          if (isArray(type.type)) return ret.concat(type.type)\n          ret.push(type.type)\n        } else if (isFunction(type.validator)) {\n          hasCustomValidators = true\n        }\n        return ret\n      }\n      ret.push(type)\n      return ret\n    }, [])\n\n    if (!hasCustomValidators) {\n      // we got just native objects (ie: Array, Object)\n      // delegate to Vue native prop check\n      return toType('oneOfType', {\n        type: nativeChecks\n      })\n    }\n\n    const typesStr = typesToString(arr)\n\n    return this.custom(function oneOfType(value) {\n      const valid = validateTypes(arr, value, true)\n      if (!valid) warn(`oneOfType - value type should be one of \"${typesStr}\"`)\n      return valid\n    })\n  },\n\n  arrayOf(type) {\n    return toType('arrayOf', {\n      type: Array,\n      validator(values) {\n        const valid = values.every((value) => validateType(type, value))\n        if (!valid) warn(`arrayOf - value must be an array of \"${getType(type)}\"`)\n        return valid\n      }\n    })\n  },\n\n  objectOf(type) {\n    return toType('objectOf', {\n      type: Object,\n      validator(obj) {\n        const valid = Object.keys(obj).every((key) => validateType(type, obj[key]))\n        if (!valid) warn(`objectOf - value must be an object of \"${getType(type)}\"`)\n        return valid\n      }\n    })\n  },\n\n  shape(obj) {\n    const keys = Object.keys(obj)\n    const requiredKeys = keys.filter((key) => obj[key] && obj[key].required === true)\n\n    const type = toType('shape', {\n      type: Object,\n      validator(value) {\n        if (!isPlainObject(value)) {\n          return false\n        }\n        const valueKeys = Object.keys(value)\n\n        // check for required keys (if any)\n        if (requiredKeys.length > 0 && requiredKeys.some((req) => valueKeys.indexOf(req) === -1)) {\n          warn(`shape - at least one of required properties \"${requiredKeys.join('\", \"')}\" is not present`)\n          return false\n        }\n\n        return valueKeys.every((key) => {\n          if (keys.indexOf(key) === -1) {\n            if (this._vueTypes_isLoose === true) return true\n            warn(`shape - object is missing \"${key}\" property`)\n            return false\n          }\n          const type = obj[key]\n          return validateType(type, value[key])\n        })\n      }\n    })\n\n    Object.defineProperty(type, '_vueTypes_isLoose', {\n      enumerable: false,\n      writable: true,\n      value: false\n    })\n\n    Object.defineProperty(type, 'loose', {\n      get() {\n        this._vueTypes_isLoose = true\n        return this\n      },\n      enumerable: false\n    })\n\n    return type\n  }\n\n}\n\nconst typeDefaults = () => ({\n  func: noop,\n  bool: true,\n  string: '',\n  number: 0,\n  array: () => [],\n  object: () => ({}),\n  integer: 0\n})\n\nlet currentDefaults = typeDefaults()\n\nObject.defineProperty(VuePropTypes, 'sensibleDefaults', {\n  enumerable: false,\n  set(value) {\n    if (value === false) {\n      currentDefaults = {}\n    } else if (value === true) {\n      currentDefaults = typeDefaults()\n    } else if (isPlainObject(value)) {\n      currentDefaults = value\n    }\n  },\n  get() {\n    return currentDefaults\n  }\n})\n\nexport default VuePropTypes\n"],"names":["isHostObject","value","result","toString","e","isObjectLike","objectTag","funcProto","Function","prototype","objectProto","Object","funcToString","hasOwnProperty","objectCtorString","call","objectToString","getPrototype","func","transform","arg","overArg","getPrototypeOf","proto","Ctor","constructor","ObjProto","hasOwn","FN_MATCH_REGEXP","getType","fn","type","undefined","match","getNativeType","noop","isInteger","Number","isFinite","Math","floor","isArray","Array","isFunction","_typeToString","map","join","typesToString","types","withDefault","defineProperty","def","this","default","validateType","isPlainObject","_vueTypes_name","withRequired","required","withNullable","_vueTypes_nullable","validator","validateTypes","toType","name","obj","bind","typeToCheck","valid","expectedType","some","silent","VuePropTypes","currentDefaults","Boolean","bool","String","string","number","array","object","integer","validatorFn","TypeError","arr","allowedTypes","reduce","ret","v","indexOf","push","length","instanceConstructor","hasCustomValidators","nativeChecks","i","concat","custom","values","every","keys","key","requiredKeys","filter","valueKeys","req","_this","_vueTypes_isLoose","typeDefaults"],"mappings":"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"}